name: Build & Release

on:
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 21.x
        cache: "npm"

    - name: Install dependencies
      run: npm install

    - name: Build and package app
      run: npm run make

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}
        path: "dist/*.zip"

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Linux artifacts
        uses: actions/download-artifact@v2
        with:
          name: ubuntu-latest
          path: ./build/ubuntu

      - name: Download Windows artifacts
        uses: actions/download-artifact@v2
        with:
          name: windows-latest
          path: ./build/windows

      - name: Download macOS artifacts
        uses: actions/download-artifact@v2
        with:
          name: macos-latest
          path: ./build/macos

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload release assets Linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/ubuntu
          asset_name: build-ubuntu.zip
          asset_content_type: application/zip

      - name: Upload release assets Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/windows
          asset_name: build-windows.zip
          asset_content_type: application/zip

      - name: Upload release assets macOS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/macos
          asset_name: build-macos.zip
          asset_content_type: application/zip